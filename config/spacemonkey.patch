diff -rupN linux-3.8.6/arch/arm/mach-kirkwood/Kconfig linux-3.8.6-patched/arch/arm/mach-kirkwood/Kconfig
--- linux-3.8.6/arch/arm/mach-kirkwood/Kconfig	2013-06-04 00:19:59.871719809 -0600
+++ linux-3.8.6-patched/arch/arm/mach-kirkwood/Kconfig	2013-06-04 00:23:22.759720084 -0600
@@ -314,6 +314,12 @@ config MACH_NSA320
      Say 'Y' here if you want your kernel to support the
      ZyXel NSA320.
 
+config MACH_SPACEMONKEY
+	bool "Space Monkey"
+	help
+	  Say 'Y' here if you want your kernel to support the
+	  Space Monkey
+
 endmenu
 
 endif
diff -rupN linux-3.8.6/arch/arm/mach-kirkwood/Makefile linux-3.8.6-patched/arch/arm/mach-kirkwood/Makefile
--- linux-3.8.6/arch/arm/mach-kirkwood/Makefile	2013-06-04 00:19:59.871719809 -0600
+++ linux-3.8.6-patched/arch/arm/mach-kirkwood/Makefile	2013-06-04 00:23:22.759720084 -0600
@@ -26,6 +26,7 @@ obj-$(CONFIG_MACH_D2NET_V2)		+= d2net_v2
 obj-$(CONFIG_MACH_NET2BIG_V2)		+= netxbig_v2-setup.o lacie_v2-common.o
 obj-$(CONFIG_MACH_NET5BIG_V2)		+= netxbig_v2-setup.o lacie_v2-common.o
 obj-$(CONFIG_MACH_T5325)		+= t5325-setup.o
+obj-$(CONFIG_MACH_SPACEMONKEY)		+= spacemonkey-setup.o
 obj-$(CONFIG_MACH_NSA310)		+= nsa310-setup.o
 obj-$(CONFIG_MACH_NSA320)		+= nsa320-setup.o
 
diff -rupN linux-3.8.6/arch/arm/mach-kirkwood/spacemonkey-setup.c linux-3.8.6-patched/arch/arm/mach-kirkwood/spacemonkey-setup.c
--- linux-3.8.6/arch/arm/mach-kirkwood/spacemonkey-setup.c	1969-12-31 17:00:00.000000000 -0700
+++ linux-3.8.6-patched/arch/arm/mach-kirkwood/spacemonkey-setup.c	2013-06-04 00:23:36.271719809 -0600
@@ -0,0 +1,163 @@
+/*
+ * arch/arm/mach-kirkwood/spacemonkey-setup.c
+ *
+ * Space Monkey Setup
+ *
+ * This file is licensed under the terms of the GNU General Public
+ * License version 2.  This program is licensed "as is" without any
+ * warranty of any kind, whether express or implied.
+ */
+
+#include <linux/kernel.h>
+#include <linux/init.h>
+#include <linux/platform_device.h>
+#include <linux/ata_platform.h>
+#include <linux/mtd/partitions.h>
+#include <linux/mv643xx_eth.h>
+#include <linux/input.h>
+#include <linux/gpio.h>
+#include <linux/gpio_keys.h>
+#include <linux/leds.h>
+#include <asm/mach-types.h>
+#include <asm/mach/arch.h>
+#include <mach/kirkwood.h>
+#include "common.h"
+#include "mpp.h"
+
+static struct mtd_partition spacemonkey_nand_parts[] = {
+	{
+		.name	= "u-boot",
+		.offset	= 0,
+		.size	= SZ_1M
+	}, {
+		.name	= "uImage",
+		.offset	= MTDPART_OFS_NXTBLK,
+		.size	= SZ_4M
+	}, {
+		.name	= "recovery",
+		.offset	= MTDPART_OFS_NXTBLK,
+		.size	= SZ_8M + SZ_2M
+	}, {
+		.name	= "secure",
+		.offset	= MTDPART_OFS_NXTBLK,
+		.size	= SZ_1M
+	}, {
+		.name	= "root",
+		.offset	= MTDPART_OFS_NXTBLK,
+		.size	= MTDPART_SIZ_FULL
+	},
+};
+
+static struct mv643xx_eth_platform_data spacemonkey_ge00_data = {
+	.phy_addr	= MV643XX_ETH_PHY_ADDR(0),
+};
+
+static struct mv_sata_platform_data spacemonkey_sata_data = {
+	.n_ports	= 1,
+};
+
+static struct gpio_led spacemonkey_led_pins[] = {
+	{
+		.name			= "status:green:health",
+		.default_trigger	= "none",
+		.gpio			= 28,
+		.active_low		= 1,
+	},
+	{
+		.name			= "status:orange:fault",
+		.default_trigger	= "none",
+		.gpio			= 23,
+		.active_low		= 1,
+	},
+	{
+		.name			= "status:blue:misc",
+		.default_trigger	= "default-on",
+		.gpio			= 21,
+		.active_low		= 1,
+	},
+};
+
+static struct gpio_led_platform_data spacemonkey_led_data = {
+	.leds		= spacemonkey_led_pins,
+	.num_leds	= ARRAY_SIZE(spacemonkey_led_pins),
+};
+
+static struct platform_device spacemonkey_leds = {
+	.name	= "leds-gpio",
+	.id	= -1,
+	.dev	= {
+		.platform_data	= &spacemonkey_led_data,
+	},
+};
+
+#define SPACEMONKEY_SW_BUTTON		0x00
+#define SPACEMONKEY_GPIO_KEY_BUTTON	37
+
+static struct gpio_keys_button spacemonkey_buttons[] = {
+	{
+		.type		= EV_SW,
+		.code		= SPACEMONKEY_SW_BUTTON,
+		.gpio		= SPACEMONKEY_GPIO_KEY_BUTTON,
+		.desc		= "Function button",
+		.active_low	= 1,
+		.debounce_interval = 200,
+	},
+};
+
+static struct gpio_keys_platform_data spacemonkey_button_data = {
+	.buttons	= spacemonkey_buttons,
+	.nbuttons	= ARRAY_SIZE(spacemonkey_buttons),
+};
+
+static struct platform_device spacemonkey_button_device = {
+	.name		= "gpio-keys",
+	.id		= -1,
+	.num_resources	= 0,
+	.dev		= {
+		.platform_data	= &spacemonkey_button_data,
+	},
+};
+
+static unsigned int spacemonkey_mpp_config[] __initdata = {
+	MPP37_GPIO,	/* Push Button */
+	MPP28_GPIO,	/* LED Green */
+	MPP27_GPIO,	/* HW Revision ID bit 2 */
+	MPP26_GPIO,	/* HW Revision ID bit 1 */
+	MPP24_GPIO,	/* HW Revision ID bit 0 */
+	MPP23_GPIO,	/* LED Orange */
+	MPP21_GPIO,	/* LED Blue */
+	0,
+};
+
+static void __init spacemonkey_init(void)
+{
+	/*
+	 * Basic setup. Needs to be called early.
+	 */
+	kirkwood_init();
+
+	/* setup gpio pin select */
+	kirkwood_mpp_conf(spacemonkey_mpp_config);
+
+	kirkwood_uart0_init();
+	kirkwood_nand_init(ARRAY_AND_SIZE(spacemonkey_nand_parts), 40);
+
+	kirkwood_ehci_init();
+	kirkwood_ge00_init(&spacemonkey_ge00_data);
+	kirkwood_sata_init(&spacemonkey_sata_data);
+
+	platform_device_register(&spacemonkey_leds);
+	platform_device_register(&spacemonkey_button_device);
+}
+
+MACHINE_START(SPACEMONKEY, "Space Monkey")
+	/* Maintainer: Tom Stokes <tom@spacemonkey.com> */
+	.atag_offset	= 0x00000100,
+	.init_machine	= spacemonkey_init,
+	.map_io		= kirkwood_map_io,
+	.init_early	= kirkwood_init_early,
+	.init_irq	= kirkwood_init_irq,
+	.timer		= &kirkwood_timer,
+	.restart	= kirkwood_restart,
+MACHINE_END
+
diff -rupN linux-3.8.6/arch/arm/tools/mach-types linux-3.8.6-patched/arch/arm/tools/mach-types
--- linux-3.8.6/arch/arm/tools/mach-types	2013-04-05 10:49:06.000000000 -0600
+++ linux-3.8.6-patched/arch/arm/tools/mach-types	2013-06-04 00:23:22.759720084 -0600
@@ -1204,3 +1204,4 @@ baileys			MACH_BAILEYS		BAILEYS			4169
 familybox		MACH_FAMILYBOX		FAMILYBOX		4170
 ensemble_mx35		MACH_ENSEMBLE_MX35	ENSEMBLE_MX35		4171
 sc_sps_1		MACH_SC_SPS_1		SC_SPS_1		4172
+spacemonkey		MACH_SPACEMONKEY	SPACEMONKEY		4341
